// Code generated by hertz generator.

package api

import (
	"context"

	api "bibi/api/biz/model/api"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// LikeAction .
// @router /bibi/interaction/like/action [POST]
func LikeAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.LikeActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.LikeActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// LikeList .
// @router /bibi/interaction/like/list [GET]
func LikeList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.LikeListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.LikeListResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentCreate .
// @router /bibi/interaction/comment/create [POST]
func CommentCreate(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentCreateRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.CommentCreateResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentDelete .
// @router /bibi/interaction/comment/delete [POST]
func CommentDelete(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentDeleteRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.CommentDeleteResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentList .
// @router /bibi/interaction/comment/list [POST]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.CommentListResponse)

	c.JSON(consts.StatusOK, resp)
}
